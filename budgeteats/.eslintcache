[{"/home/luketk/budgeteats/budgeteats/src/index.js":"1","/home/luketk/budgeteats/budgeteats/src/reportWebVitals.js":"2","/home/luketk/budgeteats/budgeteats/src/App.js":"3","/home/luketk/budgeteats/budgeteats/src/components/navigationBar.jsx":"4","/home/luketk/budgeteats/budgeteats/src/components/homepage.jsx":"5","/home/luketk/budgeteats/budgeteats/src/components/ingredient.jsx":"6","/home/luketk/budgeteats/budgeteats/src/components/ingredientCart.jsx":"7","/home/luketk/budgeteats/budgeteats/src/components/ingredientSearch.jsx":"8"},{"size":500,"mtime":1611422348171,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611422348171,"results":"11","hashOfConfig":"10"},{"size":755,"mtime":1611508522676,"results":"12","hashOfConfig":"10"},{"size":510,"mtime":1611510192297,"results":"13","hashOfConfig":"10"},{"size":943,"mtime":1611512408938,"results":"14","hashOfConfig":"10"},{"size":3216,"mtime":1611508522676,"results":"15","hashOfConfig":"10"},{"size":3941,"mtime":1611508522676,"results":"16","hashOfConfig":"10"},{"size":1808,"mtime":1611508522676,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3gqbua",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/luketk/budgeteats/budgeteats/src/index.js",[],["37","38"],"/home/luketk/budgeteats/budgeteats/src/reportWebVitals.js",[],"/home/luketk/budgeteats/budgeteats/src/App.js",["39"],"import React, { Component } from \"react\";\nimport NavigationBar from \"./components/navigationBar\";\nimport Ingredient from \"./components/ingredient\";\nimport Homepage from \"./components/homepage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <NavigationBar />\n      </header>\n      <main>\n        <Router>\n          <React.Fragment>\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/ingredients\">\n                <Ingredient />\n              </Route>\n            </Switch>\n          </React.Fragment>\n        </Router>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","/home/luketk/budgeteats/budgeteats/src/components/navigationBar.jsx",[],"/home/luketk/budgeteats/budgeteats/src/components/homepage.jsx",[],"/home/luketk/budgeteats/budgeteats/src/components/ingredient.jsx",[],"/home/luketk/budgeteats/budgeteats/src/components/ingredientCart.jsx",["40"],"import React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport CounterInput from \"react-bootstrap-counter\";\n\nclass IncredientCart extends Component {\n  state = {\n    count: [],\n  };\n\n  removeIngredient = (ingredient) => {\n    this.props.removeIngredient(ingredient);\n  };\n\n  setPrice = () => {\n    // console.log(event.target.CounterInput);\n    var count = this.state.count;\n    var totalPrice = new Array(this.props.stores.length).fill(0);\n    this.props.addedIngredients.forEach((ingredient, i) => {\n      ingredient.slice(1).forEach((price, index) => {\n        totalPrice[index] += price * count[i];\n      });\n    });\n\n    return totalPrice;\n  };\n\n  incrementCounter = (i) => {\n    var count = this.state.count;\n    count[i]++;\n    this.setState({ count });\n  };\n\n  decrementCounter = (i) => {\n    if (this.state.count[i] > 1) {\n      var count = this.state.count;\n      count[i]--;\n      this.setState({ count });\n    }\n  };\n\n  returnItemPrice(price, i) {\n    let item =\n      price === 0\n        ? \"Not Found\"\n        : \"$ \" + parseFloat(price * this.state.count[i]).toFixed(2);\n    return item;\n  }\n  render() {\n    return (\n      <div>\n        <Table\n          onChange={this.setPrice}\n          striped\n          bordered\n          hover\n          variant=\"light\"\n          responsive\n        >\n          <thead>\n            <tr>\n              <th>Ingredient Name</th>\n              {this.props.stores.map((store, index) => {\n                return <th key={index}>{store}</th>;\n              })}\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.addedIngredients.map((ingredient, i) => {\n              var count = this.state.count;\n              var countIndex = count.length;\n              while (this.props.addedIngredients.length > countIndex) {\n                count.push(1);\n                ++countIndex;\n              }\n              return (\n                <tr>\n                  <td>{ingredient[0]}</td>\n                  {ingredient.slice(1).map((item, index) => {\n                    return <td key={index}>{this.returnItemPrice(item, i)}</td>;\n                  })}\n                  <td\n                    style={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Button\n                      variant=\"secondary\"\n                      style={{ width: 35, height: 35 }}\n                      onClick={() => this.decrementCounter(i)}\n                    >\n                      -\n                    </Button>\n                    <span style={{ marginLeft: 10, marginRight: 10 }}>\n                      {this.state.count[i]}\n                    </span>\n                    <Button\n                      variant=\"secondary\"\n                      style={{ width: 35, height: 35 }}\n                      onClick={() => this.incrementCounter(i)}\n                    >\n                      +\n                    </Button>\n                  </td>\n                  <td style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <Button\n                      onClick={() => this.removeIngredient(ingredient)}\n                      variant=\"danger\"\n                    >\n                      Remove\n                    </Button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n          <tfoot>\n            <tr>\n              <th>Total</th>\n              {this.setPrice().map((price, i) => {\n                return <th key={i}>{\"$ \" + parseFloat(price).toFixed(2)}</th>;\n              })}\n            </tr>\n          </tfoot>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default IncredientCart;\n","/home/luketk/budgeteats/budgeteats/src/components/ingredientSearch.jsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},{"ruleId":"45","severity":1,"message":"49","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":20},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'CounterInput' is defined but never used.","no-global-assign","no-unsafe-negation"]